{"version":3,"file":"stereogram-worker.js","sources":["../../lib/stereogram-engine.js","stereogram-worker.js"],"names":[],"mappings":"AAAA,cAAA,gCAGA,OAAA,2BAAA,WAGA,GAAA,KAmCA,OAjCA,GAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAOA,IAAA,GAHA,GAFA,EAAA,KAAA,IAAA,EAAA,MAAA,GAKA,EAAA,EAAA,EAAA,EAAA,SAAA,EAKA,IAAA,GAJA,GAAA,GAAA,EAAA,EAAA,QAAA,EAAA,MACA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,MACA,EAAA,EAAA,EAAA,EAAA,MAEA,EAAA,EAAA,EAAA,EAAA,QAAA,EACA,GAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,OAAA,OAEA,CACA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAGA,IAAA,EAAA,GAEA,IAAA,GAAA,KAAA,MAAA,EAAA,EACA,KAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,KAOA,ICtCA,UAAA,SAAA,GAGA,OAAA,EAAA,KAAA,SAAA,GACA,aAAA,IAAA,EAAA,KAAA,IAAA,UAAA,MAIA,IAAA,QAAA,SAAA,EAAA,GAEA,SAAA,yBAAA,SAAA,GACA,EAAA,oBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBACA,EAAA,EAAA,YAIA,QAAA,oBAAA","sourcesContent":["\n/* jshint strict: true */\n\ndefine('lib/stereogram-engine',[],function() {\n  'use strict';\n\n  var exports = {};\n\n  exports.renderIntoImageData = function(depthData, textureData, destData, maxDepthOffset) {\n    // Calculate left-most margin\n    var leftMargin = Math.max(textureData.width, maxDepthOffset);\n\n    var i;\n\n    // Generate destData\n    for(var row_idx=0; row_idx<destData.height; ++row_idx) {\n      var texRowOffset = (row_idx % textureData.height) * 4 * textureData.width;\n      var depthRowOffset = (row_idx % depthData.height) * 4 * depthData.width;\n      var destRowOffset = row_idx * 4 * destData.width;\n\n      for(var col_idx=0; col_idx<destData.width; ++col_idx) {\n        if(col_idx < leftMargin) {\n          for(i=0; i<4; ++i) {\n            destData.data[destRowOffset + col_idx*4 + i] =\n              textureData.data[texRowOffset + (col_idx % textureData.width)*4 + i];\n          }\n        } else {\n          var depth = depthData.data[depthRowOffset + ((col_idx - leftMargin) % depthData.width)*4];\n\n          // Rescale depth from 0 -> maxDepthOffset\n          depth *= maxDepthOffset / 255;\n\n          var offset = Math.floor(leftMargin - depth);\n          for(i=0; i<4; ++i) {\n            destData.data[destRowOffset + col_idx*4 + i] = destData.data[destRowOffset + (col_idx - offset)*4 + i];\n          }\n        }\n      }\n    }\n  };\n\n  return exports;\n});\n\n","\n/* jshint strict: true */\n\nonmessage = function(event) {\n  'use strict';\n\n  render(event.data, function(data) {\n    postMessage({ tag: event.data.tag, imageData: data });\n  });\n};\n\nvar render = function(opt, done) {\n  'use strict';\n  require(['lib/stereogram-engine'], function(engine) {\n    engine.renderIntoImageData(opt.depthData, opt.textureData, opt.destData, opt.maxDepthOffset);\n    done(opt.destData);\n  });\n};\n\ndefine(\"stereogram-worker\", function(){});\n"]}